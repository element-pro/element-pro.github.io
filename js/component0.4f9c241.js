(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{11:function(t,e,n){"use strict";n.r(e);function o(t){throw new TypeError('"'+t+'" is read-only')}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var s,v={components:{"dialog-demo0":(s={render:function(t){return t("div",["这是一段信息"])}},r({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",[e("el-button",{attrs:{type:"primary"},on:{click:this.openDialog}},[this._v("打开对话框")])],1)},staticRenderFns:[]},{methods:{openDialog:function(){this.$dialog(s,{title:"我是对话框"})}}})),"dialog-demo1":function(){var t={props:{message:String},render:function(t){return t("div",[this.message])}};return r({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",[e("el-button",{attrs:{type:"primary"},on:{click:this.openDialog}},[this._v("打开对话框")])],1)},staticRenderFns:[]},{methods:{openDialog:function(){this.$dialog(t,{title:"我是对话框",props:{message:"哈哈，我是从外面传进来的"}})}}})}(),"dialog-demo2":function(){var t={render:function(t){return t("el-button",{attrs:{type:"primary"},on:{click:this.openDialog}},["打开内层对话框"])},methods:{openDialog:function(){this.$createElement;this.$dialog.create({render:function(t){return t("div",["我是嵌套的对话框"])}},{title:"内层对话框",width:"40%"})}}};return r({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",[e("el-button",{attrs:{type:"primary"},on:{click:this.openDialog}},[this._v("打开对话框")])],1)},staticRenderFns:[]},{methods:{openDialog:function(){this.$dialog(t,{title:"外层对话框"})}}})}(),"dialog-demo3":function(){var t={props:{success:Function},data:function(){return{form:{}}},render:function(t){var e=this,n=this.form;return t("el-form",{attrs:{"label-width":"80px"},model:{value:n,callback:function(t){o("form")}}},[t("el-form-item",{attrs:{label:"活动名称"}},[t("el-input",{attrs:{placeholder:"请输入内容"},model:{value:n.name,callback:function(t){e.$set(n,"name",t)}}})]),t("el-form-item",{attrs:{label:"活动区域"}},[t("el-select",{attrs:{placeholder:"请选择活动区域"},model:{value:n.region,callback:function(t){e.$set(n,"region",t)}}},[t("el-option",{attrs:{label:"成都",value:"chengdu"}}),t("el-option",{attrs:{label:"重庆",value:"chongqin"}})])])])},methods:{submitForm:function(t,e){var n=this;e.start(),this.$axios.post("/api/xxx",{}).then((function(e){t&&t(),n.success&&n.success()})).finally((function(){e.finish()}))}}};return r({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",[e("el-button",{attrs:{type:"primary"},on:{click:this.openDialog}},[this._v("打开对话框")])],1)},staticRenderFns:[]},{methods:{openDialog:function(){this.$dialog(t,{title:"对话框",props:{success:function(){}}})}}})}(),"dialog-demo4":function(){var t={inject:["elproDialog"],props:{success:Function},data:function(){return{form:{}}},render:function(t){var e=this,n=this.form;return t("el-form",{attrs:{"label-width":"80px"},model:{value:n,callback:function(t){o("form")}}},[t("el-form-item",{attrs:{label:"活动名称"}},[t("el-input",{attrs:{placeholder:"请输入内容"},model:{value:n.name,callback:function(t){e.$set(n,"name",t)}}})]),t("el-form-item",{attrs:{label:"活动区域"}},[t("el-select",{attrs:{placeholder:"请选择活动区域"},model:{value:n.region,callback:function(t){e.$set(n,"region",t)}}},[t("el-option",{attrs:{label:"成都",value:"chengdu"}}),t("el-option",{attrs:{label:"重庆",value:"chongqin"}})])]),t("el-form-item",[t("el-button",{attrs:{type:"primary"},on:{click:this.handleSubmit}},["提交"]),t("el-button",{on:{click:this.handleCancel}},["取消"])])])},methods:{handleCancel:function(){this.elproDialog.visible=!1},handleSubmit:function(){var t=this;this.elproDialog.showLoading(),this.$axios.post("/api/xxx",{}).then((function(e){t.elproDialog.visible=!1,t.success&&t.success()})).finally((function(){t.elproDialog.hideLoading()}))}}};return r({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",[e("el-button",{attrs:{type:"primary"},on:{click:this.openDialog}},[this._v("打开对话框")])],1)},staticRenderFns:[]},{methods:{openDialog:function(){this.$dialog(t,{title:"对话框",showFooter:!1,props:{success:function(){}}})}}})}(),"dialog-demo5":function(){var t={render:function(t){return t("div",["这是一段信息"])}};return r({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",[e("el-button",{attrs:{type:"primary"},on:{click:this.openDialog}},[this._v("打开对话框")])],1)},staticRenderFns:[]},{methods:{openDialog:function(){this.$dialog(t,{title:"我是对话框"}).then((function(){console.log("Dialog confirm")})).catch((function(){console.log("Dialog cancel")}))}}})}()}},a=n(1),_=Object(a.a)(v,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"page-wrapper"},[n("h2",[t._v("Dialog 对话框")]),t._v(" "),t._m(0),t._v(" "),n("h3",[t._v("基本用法")]),t._v(" "),t._m(1),t._v(" "),n("elpro-demo",[n("template",{slot:"source"},[n("dialog-demo0")],1),n("pre",[n("code",{staticClass:"language-html"},[t._v("<template>\n  <el-button type=\"primary\" @click=\"openDialog\">打开对话框</el-button>\n</template>\n\n<script>\n// if you: import SomeForm from '@/components/SomeForm'\nconst SomeForm = {\n  render(h) {\n    return (\n      <div>这是一段信息</div>\n    )\n  }\n}\nexport default {\n  methods: {\n    openDialog() {\n      this.$dialog(SomeForm, {\n        title: '我是对话框',\n      })\n    }\n  }\n}\n<\/script>\n")])])],2),n("h3",[t._v("给目标组件传参")]),t._v(" "),t._m(2),t._v(" "),n("elpro-demo",[n("template",{slot:"source"},[n("dialog-demo1")],1),n("pre",[n("code",{staticClass:"language-html"},[t._v("<template>\n  <el-button type=\"primary\" @click=\"openDialog\">打开对话框</el-button>\n</template>\n\n<script>\n// if you: import SomeForm from '@/components/SomeForm'\nconst SomeForm = {\n  props: {\n    message: String,\n  },\n  render(h) {\n    return (\n      <div>{this.message}</div>\n    )\n  }\n}\nexport default {\n  methods: {\n    openDialog() {\n      this.$dialog(SomeForm, {\n        title: '我是对话框',\n        props: {\n          message: '哈哈，我是从外面传进来的',\n        }\n      })\n    }\n  }\n}\n<\/script>\n")])])],2),n("h3",[t._v("嵌套对话框")]),t._v(" "),t._m(3),t._v(" "),n("elpro-demo",[n("template",{slot:"source"},[n("dialog-demo2")],1),n("pre",[n("code",{staticClass:"language-html"},[t._v("<template>\n  <el-button type=\"primary\" @click=\"openDialog\">打开对话框</el-button>\n</template>\n\n<script>\n// if you: import SomeForm from '@/components/SomeForm'\n\nconst SomeForm = {\n  render(h) {\n    return (\n      <el-button type=\"primary\" vOn:click={this.openDialog}>打开内层对话框</el-button>\n    )\n  },\n  methods: {\n    openDialog() {\n      const component = {\n        render(h) {\n          return (\n            <div>我是嵌套的对话框</div>\n          )\n        }\n      }\n\n      this.$dialog.create(component, {\n        title: '内层对话框',\n        width: '40%',\n      })\n    }\n  }\n}\n\nexport default {\n  methods: {\n    openDialog() {\n      this.$dialog(SomeForm, {\n        title: '外层对话框',\n      })\n    }\n  }\n}\n<\/script>\n")])])],2),t._m(4),t._v(" "),n("h3",[t._v("取消和确定")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),n("elpro-demo",[n("template",{slot:"source"},[n("dialog-demo3")],1),n("pre",[n("code",{staticClass:"language-html"},[t._v('<template>\n  <el-button type="primary" @click="openDialog">打开对话框</el-button>\n</template>\n\n<script>\n// if you: import SomeForm from \'@/components/SomeForm\'\n\nconst SomeForm = {\n  props: {\n    success: Function,\n  },\n  data() {\n    return {\n      form: {},\n    }\n  },\n  render(h) {\n    const form = this.form\n    return (\n      <el-form vModel={form} label-width="80px">\n        <el-form-item label="活动名称">\n          <el-input vModel={form.name} placeholder="请输入内容"></el-input>\n        </el-form-item>\n        <el-form-item label="活动区域">\n          <el-select vModel={form.region} placeholder="请选择活动区域">\n            <el-option label="成都" value="chengdu"></el-option>\n            <el-option label="重庆" value="chongqin"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n    )\n  },\n  methods: {\n    submitForm(done, loading) {\n      loading.start()\n      this.$axios.post(\'/api/xxx\', {}).then((res) => {\n        // TODO\n        done && done()\n        this.success && this.success()\n      }).finally(() => {\n        loading.finish()\n      })\n    }\n  }\n}\n\nexport default {\n  methods: {\n    openDialog() {\n      this.$dialog(SomeForm, {\n        title: \'对话框\',\n        props: {\n          success: () => {},\n        }\n      })\n    }\n  }\n}\n<\/script>\n')])])],2),t._m(7),t._v(" "),n("h3",[t._v("自定义尾部操作按钮")]),t._v(" "),t._m(8),t._v(" "),n("elpro-demo",[n("template",{slot:"source"},[n("dialog-demo4")],1),n("pre",[n("code",{staticClass:"language-html"},[t._v('<template>\n  <el-button type="primary" @click="openDialog">打开对话框</el-button>\n</template>\n\n<script>\n// if you: import SomeForm from \'@/components/SomeForm\'\n\nconst SomeForm = {\n  inject: [\'elproDialog\'],\n  props: {\n    success: Function,\n  },\n  data() {\n    return {\n      form: {},\n    }\n  },\n  render(h) {\n    const form = this.form\n    return (\n      <el-form vModel={form} label-width="80px">\n        <el-form-item label="活动名称">\n          <el-input vModel={form.name} placeholder="请输入内容"></el-input>\n        </el-form-item>\n        <el-form-item label="活动区域">\n          <el-select vModel={form.region} placeholder="请选择活动区域">\n            <el-option label="成都" value="chengdu"></el-option>\n            <el-option label="重庆" value="chongqin"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type="primary" vOn:click={this.handleSubmit}>提交</el-button>\n          <el-button vOn:click={this.handleCancel}>取消</el-button>\n        </el-form-item>\n      </el-form>\n    )\n  },\n  methods: {\n    handleCancel() {\n      this.elproDialog.visible = false // or: this.$dialog.close()\n    },\n    handleSubmit() {\n      this.elproDialog.showLoading()\n      this.$axios.post(\'/api/xxx\', {}).then((res) => {\n        // TODO\n        this.elproDialog.visible = false\n        this.success && this.success()\n      }).finally(() => {\n        this.elproDialog.hideLoading()\n      })\n    }\n  }\n}\n\nexport default {\n  methods: {\n    openDialog() {\n      this.$dialog(SomeForm, {\n        title: \'对话框\',\n        showFooter: false,\n        props: {\n          success: () => {},\n        }\n      })\n    }\n  }\n}\n<\/script>\n')])])],2),t._m(9),t._v(" "),n("h3",[t._v("Promise 式调用")]),t._v(" "),t._m(10),t._v(" "),n("elpro-demo",[n("template",{slot:"source"},[n("dialog-demo5")],1),n("pre",[n("code",{staticClass:"language-html"},[t._v("<template>\n  <el-button type=\"primary\" @click=\"openDialog\">打开对话框</el-button>\n</template>\n\n<script>\n// if you: import SomeForm from '@/components/SomeForm'\n\nconst SomeForm = {\n  render(h) {\n    return (\n      <div>这是一段信息</div>\n    )\n  }\n}\n\nexport default {\n  methods: {\n    openDialog() {\n      this.$dialog(SomeForm, {\n        title: '我是对话框',\n      }).then(() => {\n        console.log('Dialog confirm')\n      }).catch(() => {\n        console.log('Dialog cancel')\n      })\n    }\n  }\n}\n<\/script>\n")])])],2),n("h3",[t._v("全局关闭")]),t._v(" "),t._m(11),t._v(" "),n("h3",[t._v("Component")]),t._v(" "),t._m(12),t._v(" "),n("h3",[t._v("Options")]),t._v(" "),t._m(13)],1)}),[function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("基于 "),e("code",[this._v("ElDialog")]),this._v(" 封装扩展的组件，通过插件的方式调用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("调用 "),e("code",[this._v("this.$dialog(component, options)")]),this._v(" 方法。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("我们知道 Dialog 只是一个容器组件，可以通过 "),e("code",[this._v("props")]),this._v(" 选项给它里面的 "),e("strong",[this._v("目标组件")]),this._v(" 传递参数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("如果你想在一个 Dialog 内部嵌套另一个 Dialog，需要在 Dialog 内部调用 "),e("code",[this._v("this.$dialog.create(component, options)")]),this._v(" 方法。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("默认情况下，"),e("code",[this._v("ElproDialog")]),this._v(" 是单例模式的，内部共用一个对话框实例。对于存在嵌套的应用场景，请使用 "),e("code",[this._v("this.$dialog.create")]),this._v(" 方法，它会每次调用都创建一个新的对话框实例。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("点击 "),e("code",[this._v("cancel")]),this._v(" 按钮直接关闭对话框；")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("点击 "),n("code",[t._v("confirm")]),t._v(" 按钮，默认会自动调用 "),n("strong",[t._v("目标组件")]),t._v(" 内定义的 "),n("code",[t._v("submitForm")]),t._v(" 方法，并回调其两个参数：一个关闭对话框的 "),n("code",[t._v("done")]),t._v(" 方法和一个控制提交状态的 "),n("code",[t._v("loading")]),t._v(" 对象（包含 "),n("code",[t._v("start")]),t._v(" 和 "),n("code",[t._v("finish")]),t._v(" 两个方法）。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("调用 "),e("code",[this._v("loading.start")]),this._v(" 时，允许传入一个 "),e("code",[this._v("{}")]),this._v(" 对象，目前只有一个 "),e("code",[this._v("text")]),this._v(" 选项用于控制加载文案。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("大多数情况下使用 Dialog 默认提供的按钮（取消和确定）即可。如果需要自定义，可以通过 "),e("code",[this._v("showFooter")]),this._v(" 属性隐藏默认的 Footer。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("blockquote",[n("p",[t._v("说明："),n("code",[t._v("ElproDialog")]),t._v(" 组件内部使用 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#provide-inject"}},[t._v(" Vue provide")]),t._v(" 特性，向下注入了一个名为 "),n("code",[t._v("elproDialog")]),t._v(" 的 Dialog 上下文。在目标组件内，可以通过 "),n("code",[t._v("inject: ['elproDialog']")]),t._v(" 配置引入该对象，并在后续编码过程中调用 "),n("code",[t._v("this.elproDialog")]),t._v(" 进行使用，指向的是当前 Dialog 实例。"),n("strong",[t._v("注意：请谨慎使用 elproDialog 对象，避免造成组件污染，除非你知道该怎么使用它")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("这里说的 "),n("code",[t._v("promise")]),t._v(" 并不是真正意义上的 "),n("code",[t._v("ES6 promise")]),t._v(" 对象，只是在调用 "),n("code",[t._v("this.$dialog")]),t._v(" 时，会返回一个具有 "),n("code",[t._v("then")]),t._v(" 和 "),n("code",[t._v("catch")]),t._v(" 方法的 Dialog 实例对象，你可以像 "),n("code",[t._v("promise")]),t._v(" 那样使用它，点击 "),n("code",[t._v("confirm")]),t._v(" 时执行 "),n("code",[t._v("then")]),t._v(" 回调函数，点击 "),n("code",[t._v("cancel")]),t._v(" 时执行 "),n("code",[t._v("catch")]),t._v(" 回调函数，不支持循环 "),n("code",[t._v("then")]),t._v(" 和 "),n("code",[t._v("catch")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("可以通过 "),e("code",[this._v("this.$dialog.close")]),this._v(" 或 "),e("code",[this._v("this.$dialog.closeAll")]),this._v(" 方法手动关闭对话框。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("一个 "),n("code",[t._v(".vue")]),t._v(" 文件导出对象 或 "),n("code",[t._v("Vue")]),t._v(" 选项对象，接收参数与 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#component"}},[t._v("Vue 内置 component")]),t._v(" 组件 "),n("code",[t._v("is")]),t._v(" 属性一致。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("table",[n("thead",[n("tr",[n("th",[t._v("参数")]),t._v(" "),n("th",[t._v("说明")]),t._v(" "),n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("可选值")]),t._v(" "),n("th",[t._v("默认值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("title")]),t._v(" "),n("td",[t._v("Dialog 的标题")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("—")])]),t._v(" "),n("tr",[n("td",[t._v("width")]),t._v(" "),n("td",[t._v("Dialog 的宽度")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("50%")])]),t._v(" "),n("tr",[n("td",[t._v("fullscreen")]),t._v(" "),n("td",[t._v("是否为全屏 Dialog")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("false")])]),t._v(" "),n("tr",[n("td",[t._v("top")]),t._v(" "),n("td",[t._v("Dialog CSS 中的 margin-top 值")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("15vh")])]),t._v(" "),n("tr",[n("td",[t._v("modal")]),t._v(" "),n("td",[t._v("是否需要遮罩层")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("modalAppendToBody")]),t._v(" "),n("td",[t._v("遮罩层是否插入至 body 元素上，若为 false，则遮罩层会插入至 Dialog 的父元素上")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("appendToBody")]),t._v(" "),n("td",[t._v("Dialog 自身是否插入至 body 元素上。嵌套的 Dialog 必须指定该属性并赋值为 true")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("false")])]),t._v(" "),n("tr",[n("td",[t._v("lockScroll")]),t._v(" "),n("td",[t._v("是否在 Dialog 出现时将 body 滚动锁定")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("customClass")]),t._v(" "),n("td",[t._v("Dialog 的自定义类名")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("—")])]),t._v(" "),n("tr",[n("td",[t._v("closeOnClickModal")]),t._v(" "),n("td",[t._v("是否可以通过点击 modal 关闭 Dialog")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("false")])]),t._v(" "),n("tr",[n("td",[t._v("closeOnPressEscape")]),t._v(" "),n("td",[t._v("是否可以通过按下 ESC 关闭 Dialog")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("showClose")]),t._v(" "),n("td",[t._v("是否显示关闭按钮")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("beforeClose")]),t._v(" "),n("td",[t._v("关闭前的回调，会暂停 Dialog 的关闭")]),t._v(" "),n("td",[t._v("function(done)，done 用于关闭 Dialog")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("—")])]),t._v(" "),n("tr",[n("td",[t._v("center")]),t._v(" "),n("td",[t._v("是否对头部和底部采用居中布局")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("false")])]),t._v(" "),n("tr",[n("td",[t._v("destroyOnClose")]),t._v(" "),n("td",[t._v("关闭时销毁 Dialog 中的元素")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("false")])]),t._v(" "),n("tr",[n("td",[t._v("showFooter")]),t._v(" "),n("td",[t._v("控制 Dialog 尾部显示")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("showCancelButton")]),t._v(" "),n("td",[t._v("控制是否显示 取消 按钮")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("showConfirmButton")]),t._v(" "),n("td",[t._v("控制是否显示 确定 按钮")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",[t._v("cancelButtonText")]),t._v(" "),n("td",[t._v("自定义 取消 按钮文本")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("取消")])]),t._v(" "),n("tr",[n("td",[t._v("confirmButtonText")]),t._v(" "),n("td",[t._v("自定义 确定 按钮文本")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("确定")])]),t._v(" "),n("tr",[n("td",[t._v("props")]),t._v(" "),n("td",[t._v("传给目标组件的参数对象")]),t._v(" "),n("td",[t._v("object")]),t._v(" "),n("td",[t._v("—")]),t._v(" "),n("td",[t._v("—")])])])])}],!1,null,null,null);e.default=_.exports}}]);